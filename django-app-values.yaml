db:
  enabled: false
  db:
    env:
      postgresDb: postgres
      postgresPassword: postgres
      postgresUser: postgres
    image:
      repository: postgres
      tag: 13.0-alpine
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  replicas: 1
  type: ClusterIP
kubernetesClusterDomain: cluster.local
nginx:
  nginx:
    image:
      repository: nginx
      tag: 1.23-alpine
  ports:
    - name: "80"
      port: 80
      targetPort: 80
  replicas: 1
  type: ClusterIP
nginxConfig:
  nginxConf: |-
    server {
        listen 80;
        server_name _;
        server_tokens off;
        client_max_body_size 20M;
        location / {
            try_files $uri @proxy_api;
        }
        location /admin {
            try_files $uri @proxy_api;
        }
        location @proxy_api {
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass   http://server:8000;
        }
        location /django_static/ {
            autoindex on;
            alias /app/backend/django_static/;
        }
    }
pvc:
  postgresData:
    storageRequest: 100Mi
  staticVolume:
    storageRequest: 100Mi
redis:
  enabled: true
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  redis:
    image:
      repository: redis
      tag: 7.0.5-alpine
  replicas: 1
  type: ClusterIP
server:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  replicas: 1
  server:
    env:
      celeryBrokerUrl: 'redis://$(#environment["aws-ec-private"].configuration_endpoint_address)/0'
      celeryResultBackend: 'redis://$(#environment["aws-ec-private"].configuration_endpoint_address)/0'
      debug: "True"
      djangoDb: postgresql
      postgresHost: '$(#environment["aws-rds-private"].rds_hostname)'
      postgresName: postgres
      postgresPassword: '$(#environment["aws-rds-private"].rds_password)'
      postgresPort: '$(#environment["aws-rds-private"].rds_port)'
      postgresUser: '$(#environment["aws-rds-private"].rds_username)'
    image:
      repository: eaasunittest/django-server
      tag: latest
  type: ClusterIP
worker:
  replicas: 1
  worker:
    env:
      celeryBrokerUrl: 'redis://$(#environment["aws-ec-private"].configuration_endpoint_address)/0'
      celeryResultBackend: 'redis://$(#environment["aws-ec-private"].configuration_endpoint_address)/0'
      debug: "True"
      djangoDb: postgresql
      postgresHost: '$(#environment["aws-rds-private"].rds_hostname)'
      postgresName: postgres
      postgresPassword: '$(#environment["aws-rds-private"].rds_password)'
      postgresPort: '$(#environment["aws-rds-private"].rds_port)'
      postgresUser: '$(#environment["aws-rds-private"].rds_username)'
    image:
      repository: eaasunittest/django-worker
      tag: latest
networkPolicy:
  enabled: false
