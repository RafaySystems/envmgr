{{ if .Values.db.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    service: db
  {{- include "django-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      service: db
    {{- include "django-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: db
      {{- include "django-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: {{ quote .Values.db.db.env.postgresDb }}
        - name: POSTGRES_PASSWORD
          value: {{ quote .Values.db.db.env.postgresPassword }}
        - name: POSTGRES_USER
          value: {{ quote .Values.db.db.env.postgresUser }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.db.db.image.repository }}:{{ .Values.db.db.image.tag | default
          .Chart.AppVersion }}
        name: db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: postgres-data
      restartPolicy: Always
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
---
{{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    service: nginx
  {{- include "django-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      service: nginx
    {{- include "django-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: nginx
      {{- include "django-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.nginx.nginx.image.repository }}:{{ .Values.nginx.nginx.image.tag
          | default .Chart.AppVersion }}
        name: nginx
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
        - mountPath: /app/backend/django_static
          name: static-volume
      restartPolicy: Always
      volumes:
      - configMap:
          items:
          - key: nginx.conf
            path: default.conf
          name: nginx-config
        name: nginx-config
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
---
{{ if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    service: redis
  {{- include "django-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      service: redis
    {{- include "django-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: redis
      {{- include "django-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.redis.redis.image.repository }}:{{ .Values.redis.redis.image.tag
          | default .Chart.AppVersion }}
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
      restartPolicy: Always
---
{{ end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    service: server
  {{- include "django-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      service: server
    {{- include "django-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: server
      {{- include "django-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - /app/docker/backend/server-entrypoint.sh
        env:
        - name: CELERY_BROKER_URL
          value: {{ quote .Values.server.server.env.celeryBrokerUrl }}
        - name: CELERY_RESULT_BACKEND
          value: {{ quote .Values.server.server.env.celeryResultBackend }}
        - name: DEBUG
          value: {{ quote .Values.server.server.env.debug }}
        - name: DJANGO_DB
          value: {{ quote .Values.server.server.env.djangoDb }}
        - name: POSTGRES_HOST
          value: {{ quote .Values.server.server.env.postgresHost }}
        - name: POSTGRES_NAME
          value: {{ quote .Values.server.server.env.postgresName }}
        - name: POSTGRES_PASSWORD
          value: {{ quote .Values.server.server.env.postgresPassword }}
        - name: POSTGRES_PORT
          value: {{ quote .Values.server.server.env.postgresPort }}
        - name: POSTGRES_USER
          value: {{ quote .Values.server.server.env.postgresUser }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.server.server.image.repository }}:{{ .Values.server.server.image.tag
          | default .Chart.AppVersion }}
        name: server
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /app/backend/django_static
          name: static-volume
      restartPolicy: Always
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  labels:
    service: worker
  {{- include "django-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.worker.replicas }}
  selector:
    matchLabels:
      service: worker
    {{- include "django-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: worker
      {{- include "django-app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - /app/docker/backend/worker-entrypoint.sh
        env:
        - name: CELERY_BROKER_URL
          value: {{ quote .Values.worker.worker.env.celeryBrokerUrl }}
        - name: CELERY_RESULT_BACKEND
          value: {{ quote .Values.worker.worker.env.celeryResultBackend }}
        - name: DEBUG
          value: {{ quote .Values.worker.worker.env.debug }}
        - name: DJANGO_DB
          value: {{ quote .Values.worker.worker.env.djangoDb }}
        - name: POSTGRES_HOST
          value: {{ quote .Values.worker.worker.env.postgresHost }}
        - name: POSTGRES_NAME
          value: {{ quote .Values.worker.worker.env.postgresName }}
        - name: POSTGRES_PASSWORD
          value: {{ quote .Values.worker.worker.env.postgresPassword }}
        - name: POSTGRES_PORT
          value: {{ quote .Values.worker.worker.env.postgresPort }}
        - name: POSTGRES_USER
          value: {{ quote .Values.worker.worker.env.postgresUser }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.worker.worker.image.repository }}:{{ .Values.worker.worker.image.tag
          | default .Chart.AppVersion }}
        name: worker
        resources: {}
        volumeMounts:
        - mountPath: /app/backend/django_static
          name: static-volume
      restartPolicy: Always
      volumes:
      - name: static-volume
        persistentVolumeClaim:
          claimName: static-volume